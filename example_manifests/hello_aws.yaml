---
api_version: v1  # Required
kind: pg_spot_operator_instance  # Required
cloud: aws  # Required
region: eu-south-2  # Can skip if availability_zone set
availability_zone: eu-south-2b  # Optional
instance_name: hello-aws  # Required
#description:  # Optional
public_ip_address: true  # Default: true
floating_public_ip: true  # Default: true, as Elastic IPs are very limited per account
postgres_version: 16  # Optional. Minimum supported version is v14. Defaults to latest stable
expiration_date: "2024-10-22 00:00+03"  # Optional. Instance will be deleted after that (if engine running, no auto-destruct for now)
#destroy_backups: true  # Default: true. Also destroy any S3 backups if using pgBackRest
is_paused: false
#vault_password_file:  # If Ansible encrypted strings are used. Can also be set globally via --vault-password-file
vm:
#  cpu_architecture:  # [ arm | amd | x86 | intel ]
  cpu_min: 2  # Optional
#  cpu_max: 8  # Optional
#  ram_min: 4  # Optional
#  allow_burstable: true
#  instance_types: [m6gd.xlarge]  # cpu_min etc will be ignored then and cheapest of listed used
  storage_min: 100  # Required, as no auto-growth for now
  storage_type: network  # local | network. PS Using network volumes pins you to a specific AZ
  storage_speed_class: ssd  # hdd | ssd | nvme. For instance storage (storage_type=local)
#  volume_type: gp3  # gp2, gp3, io1, io2 Details: https://docs.aws.amazon.com/ebs/latest/userguide/ebs-volume-types.html
#  volume_iops:  # For provisioned / paid IOPS, EBS gp3 default is 3000
                # gp2 / gp3 max 16K, io1 64K, io2 256K
#  volume_throughput:  # MBs. For provisioned / paid throughput for gp3, io1 and io2. gp3 default is 125
                      # gp2 max 250, gp3 / io1 max 1000, io2 max 4000. PS Not that not all instance types can achieve max!
#  detailed_monitoring: false  # As incurs extra costs
#  unattended_security_upgrades: true  # Might result in nightly restarts
#  kernel_tuning: true  # Basic memory over-commit tuning for databases
user_tags:  # In addition to user tags the engine will add a pg-spot-operator-tag + pg-spot-operator-expiration-date
            # in case expiration_date set
  app: backend
pg:
  admin_is_superuser: true
  admin_user: admin
  admin_user_password: kah8aiThuXegh1neingee5go  # Needs to be provided if admin_user set
  app_db_name: app  # App / user DB to be created
#  admin_user_password: !vault |
#    $ANSIBLE_VAULT;1.1;AES256
#    30643364356334303739626534623937613733386535346661363166323138636537353666653262
#    3462353138393366393537643733666337353762363763620a333436343730373936343830646431
#    37363766353163666666613863363461656131646662653035336139383261643966323966633333
#    3532653838393935650a643666333361383465623463643563626337386235336166393966663733
#    3839
#  initdb_opts:  # Defaults
#    - --data-checksums
#    - --locale-provider=icu
#    - --icu-locale=en
#    - --locale=en_US.utf8
pg_config:
  tuning_profile: default  # none | default | oltp | analytics | web. Set to 'none' for Postgres defaults.
#  extensions:  # By default only get the built-in "contrib" ones
#    - cron
#    - pgaudit
#  extra_os_packages:  # Default: []
#    - pgbadger
#  ensure_shared_preload_libraries:  # Default [pg_stat_statements]
#    - pg_stat_statements
#  extra_config_lines:  # Literal postgresql.conf lines for custom overrides / tuning. Takes precedence over tuning_profile outputs.
#    - "log_connections = on"
access:
  extra_ssh_pub_keys: []  # Literal extra pubkeys to add (in addition to ~/.ssh/id_rsa.pub) to created VMs
  extra_ssh_pub_key_paths: []  # Literal extra pubkeys to add (in addition to ~/.ssh/id_rsa.pub) to created VMs
#  pg_hba:  # Defaults allow non-postgres world access
#    - "host all postgres 0.0.0.0/0 reject"
#    - "hostssl all all 0.0.0.0/0 scram-sha-256"
#aws:
  ### By default transparent auth via local CLI credentials or AWS IAM Roles Anywhere etc assumed
#  access_key_id:
#  secret_access_key:
#  security_group_ids: []  # By default VPC "default" used
#  subnet_id:
#  profile_name:
#  key_pair_name:
