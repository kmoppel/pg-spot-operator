---
- name: Enable unattended security upgrades using role default settings
  ansible.builtin.include_role:
    name: debops.debops.unattended_upgrades
  vars:
    unattended_upgrades__enabled: os.unattended_security_upgrades|d(True)
    unattended_upgrades__auto_reboot: True

- block:

  - name: Setting kernel parameters - vm.overcommit_memory
    ansible.posix.sysctl:
      name: vm.overcommit_memory
      value: '2'
    ignore_errors: true

  - name: Setting kernel parameters - vm.overcommit_ratio
    ansible.posix.sysctl:
      name: vm.overcommit_ratio
      value: '100'
    ignore_errors: true

  - name: Setting kernel parameters - vm.swappiness
    ansible.posix.sysctl:
      name: vm.swappiness
      value: '1'
    ignore_errors: true

  when: os.kernel_tuning|d(True)

# Disable Transparent Huge Pages, generally considered bad for databases that manage their own memory
- name: Set up a SystemD unit
  ansible.builtin.template:
    src: disable-thp.service.j2
    dest: /etc/systemd/system/disable-thp.service

- name: Reload daemon
  ansible.builtin.systemd_service:
    daemon_reload: true

- name: Ensure service
  ansible.builtin.systemd_service:
    state: started
    enabled: true
    name: disable-thp

# Activate normal Huge Pages if pg_spot_operator_temp.os_huge_pages_needed PG config tuning key set
# https://www.cybertec-postgresql.com/en/huge-pages-postgresql/
- block:

  - name: Setting kernel parameters - vm.nr_hugepages
    ansible.posix.sysctl:
      name: vm.nr_hugepages
      value: "{{ postgres.config_lines.pg_spot_operator_shadow_os_huge_pages_needed | string }}"
    ignore_errors: true

  - name: Make boot persistent
    ansible.builtin.raw: echo 'vm.nr_hugepages={{ postgres.config_lines.pg_spot_operator_shadow_os_huge_pages_needed }}' > /etc/sysctl.d/01-nr-hugepages.conf

  when: postgres.config_lines.pg_spot_operator_shadow_os_huge_pages_needed | d(0)
